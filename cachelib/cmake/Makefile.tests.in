# Copyright (c) Meta Platforms, Inc. and affiliates.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

TESTS = @TEST_BINARIES@

LOGS=$(TESTS:%=%.log)
MARKERS_OK=$(LOGS:%=%.ok)
MARKERS_FAIL=$(LOGS:%=%.fail)
OUTPUT=cachelib-test-summary.log

.PHONY: all clean
# Avoid deleting test logs if interrupted (e.g., timeout)
.PRECIOUS: ($LOGS) $(OUTPUT)

all: $(OUTPUT)

$(OUTPUT): $(LOGS)
	( echo  === Cachelib Test Summary === ; \
	  echo ; \
	  printf "%d TESTS PASSED\n" $$(ls *.ok | wc -l) ; \
	  printf "%d TESTS FAILED:\n" $$(ls *.fail | wc -l) ; \
	  for i in $$(ls *.fail) ; do \
	      TESTNAME=$${i%.log.fail} ; \
	      printf "  %s\n"  $$TESTNAME ; \
	  done ; \
	  echo ; \
	  echo "(system information at the end of this file)" ; \
	  echo ; \
	  echo ; \
	  for i in $$(ls *.fail) ; do \
	      LOGFILE=$${i%.fail} ; \
	      TESTNAME=$${LOGFILE%.log} ; \
	      echo === FAILED TEST: $$TESTNAME === ; \
	      echo ; \
	      cat "$$LOGFILE" ; \
	      printf "\n\n\n" ; \
	  done ; \
	  echo === System Information === ; \
	  echo ; \
	  echo == uname ; \
	  uname -a ; \
	  echo ; \
	  echo == "/proc/cpuinfo (first cpu)" ; \
	  sed '/^$$/q' /proc/cpuinfo ; \
	  echo ; \
	  echo == env ; \
	  env ; \
	  echo ; \
	  echo == df ; \
	  df -hT ; \
	  echo ; \
	  echo == lsblk ; \
	  lsblk --list --ascii ; \
	  echo ; \
	  echo == "lshw (storage/disk)" ; \
	  sudo -n lshw -c storage -c disk ; \
	  echo ; \
	  echo "== dmesg (scsi/ata)" ; \
	  sudo -n dmesg | grep -i -e scsi -e ata ; \
	  echo ; \
	  echo == top ; \
	  top -b -1 -n1 -Eg -w512; \
	  echo ; \
	  echo == lspci ; \
	  lspci ; \
	  echo ; \
	  echo == g++ -v ; \
	  g++ -v ; \
	  echo ; \
	) > "$@.t" 2>&1 \
	&& mv "$@.t" "$@"

$(LOGS): %.log: %
	@echo Running $^
	@if "./$^" > "$@" 2>&1 ; then \
		touch "$@.ok" ; \
	else \
		touch "$@.fail" ; \
	fi
	@echo Completed $^

clean:
	@rm -f $(LOGS) $(MARKERS_OK) $(MARKERS_FAIL) $(OUTPUT)
