"use strict";(self.webpackChunkcachelib=self.webpackChunkcachelib||[]).push([[2762],{15680:(e,t,r)=>{r.r(t),r.d(t,{MDXContext:()=>c,MDXProvider:()=>f,mdx:()=>v,useMDXComponents:()=>p,withMDXComponents:()=>u});var n=r(96540);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(){return a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},a.apply(this,arguments)}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),u=function(e){return function(t){var r=p(t.components);return n.createElement(e,a({},t,{components:r}))}},p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},f=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(r),f=o,d=u["".concat(i,".").concat(f)]||u[f]||m[f]||a;return r?n.createElement(d,l(l({ref:t},c),{},{components:r})):n.createElement(d,l({ref:t},c))}));function v(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},60610:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>c,toc:()=>p});var n=r(9668),o=r(21367),a=(r(96540),r(15680)),i=["components"],l={id:"WSA_overview",title:"Working Set Analysis Overview"},s=void 0,c={unversionedId:"facebook/Working_Set_Analysis/WSA_overview",id:"facebook/Working_Set_Analysis/WSA_overview",title:"Working Set Analysis Overview",description:"POCs",source:"@site/docs/facebook/Working_Set_Analysis/WSA_overview.md",sourceDirName:"facebook/Working_Set_Analysis",slug:"/facebook/Working_Set_Analysis/WSA_overview",permalink:"/docs/facebook/Working_Set_Analysis/WSA_overview",draft:!1,editUrl:"https://github.com/facebook/CacheLib/edit/main/website/docs/facebook/Working_Set_Analysis/WSA_overview.md",tags:[],version:"current",frontMatter:{id:"WSA_overview",title:"Working Set Analysis Overview"}},u={},p=[{value:"POCs",id:"pocs",level:3},{value:"Overview",id:"overview",level:3},{value:"Analysis",id:"analysis",level:3}],f={toc:p};function m(e){var t=e.components,r=(0,o.A)(e,i);return(0,a.mdx)("wrapper",(0,n.A)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("h3",{id:"pocs"},"POCs"),(0,a.mdx)("ul",null,(0,a.mdx)("li",{parentName:"ul"},"Jimmy Lu (CacheLib)"),(0,a.mdx)("li",{parentName:"ul"},"Hao Wu (CacheLib)"),(0,a.mdx)("li",{parentName:"ul"},"Pranav Bhandari (CacheLib)"),(0,a.mdx)("li",{parentName:"ul"},"Vivek Jain (Core Data Manager)")),(0,a.mdx)("h3",{id:"overview"},"Overview"),(0,a.mdx)("p",null,"WSA (Working Set Analysis) is an offline traffic analysis framework with an easy configurator-based opt-in tracing framework and local scripts that analyze workloads to debug, and find optimization opportunities. Our goal is to empower users to independently monitor, optimize and troubleshoot their caches."),(0,a.mdx)("h3",{id:"analysis"},"Analysis"),(0,a.mdx)("p",null,"This is a list of analysis that WSA supports and plans to support"),(0,a.mdx)("ul",null,(0,a.mdx)("li",{parentName:"ul"},"Hit Rate: Generate hit rate curve locally. ","[Done]"),(0,a.mdx)("li",{parentName:"ul"},"ROI: Compute the ROI of current or prospective cache workloads. ","[Current]"),(0,a.mdx)("li",{parentName:"ul"},"Reinsertion using Guarenteed Lifetime: Given the hit rate of different types in the workload, compute the benefits of reinsertion based on guarenteed lifetime for each type. ","[Current]"),(0,a.mdx)("li",{parentName:"ul"},"Allocation class: Generate the popularity and hit rate of each allocation class. This information can be used to estimate idea allocation class sizes for a workload.")))}m.isMDXComponent=!0}}]);